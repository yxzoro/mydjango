"""
Django settings for myproject project.

Generated by 'django-admin startproject' using Django 2.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# ShareProfit/myproject

###############################config###################################
# uwsgi http server address
BASE_ADDRESS = "http://localhost:18888"

########################################################################

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '-zw-d9x!d*udk6$%_+8&3)w+%dc*kx1kr=w@f!izjkp*0)qb0u'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # my app
    'myapp.apps.MyappConfig',
]
# to create tables for above apps:
# python manage.py check + makemigrations + migrate
# python manage.py shell, from myapp.models import T/T.objects.all()
# django database doc: https://docs.djangoproject.com/en/2.2/intro/tutorial02/


# log to uwsgi.log
import logging;
logging.basicConfig(level=logging.INFO, 
    format=('>>> %(levelname) -s %(asctime)s %(filename) -s %(funcName) -s%(lineno) -d: %(message)s'))
# logging.info("==>> info")


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # add WhiteNoiseMiddleware as static file handler with gunicorn
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'myproject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'myproject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

## or config mysql here :
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.mysql',
#         'NAME': 'books',     # database_name
#         'USER': 'root',
#         'PASSWORD': 'root',
#         'HOST': '10.240.212.140',
#         'PORT': '3306',
# }
#}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

USE_I18N = True

USE_L10N = True

################################################################################################
# TIME_ZONE = 'UTC'
# USE_TZ = True
TIME_ZONE = 'Asia/Shanghai'
USE_TZ = False
# USE_TZ=True，django.util.timezone.now()输出地永远是UTC时间，不管你设置的TIME_ZONE是什么
# USE_TZ=False，django.util.timezone.now()输出等同于datetime.datetime.now()，也不管TIME_ZONE设置的是什么

# 目前设置 USE_TZ=False且TIME_ZONE='Asia/Shanghai' 的情况下, 并保证本地机器时间正确, 则
#   django.util.timezone.now() = datetime.datetime.now() = 本地时间 
#   models里auto_now时间也是使用的正确的本地时间
# 目前所有地方的时间都是ok的. 就这么设置即可.

#### 注意: 时区这里要是没设置好的话,会有相差8小时的问题!! shit ####
################################################################################################

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = BASE_DIR + '/static'

